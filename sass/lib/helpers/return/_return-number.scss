/** Test and return number from a string
 * @autor https://codepen.io/corysimmons/pen/mVLVbo
 * @param {string/number} $value
 * @return {number} String to Number
 */
@function return-number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  }
  
  @if type-of($value) != string {
    @error 'Value for return-number() must be a string.';
  }
  
  $result: 0; $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);
  
  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);
    
    @if not (index(map-keys($numbers), $character) or $character == '.') {
      @return to-length(if($minus, -$result, $result), str-slice($value, $i))
    }
    
    @if $character == '.' {
      $digits: 1; 
    } @else if $digits == 0 {
      $result: $result * 10 + map-get($numbers, $character);  
    } @else {
      $digits: $digits * 10;
      $result: $result + map-get($numbers, $character) / $digits;
    }
  }
  
  @return if($minus, -$result, $result);
}
